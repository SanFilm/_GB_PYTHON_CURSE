
com, t = 60, 70
# -F- ---divider--------------------------------------------
def divider(num):
    r = '- - -'
    print()
    for i in range(5): print(f'{r} {num}. ', end = '')
    print(f'{r}\n')
# -F- ---br-------------------------------------------------
def br(ch):
    print(f'{ch} ', end = '')
    for i in range(20): print(f'{ch} ', end = '')
    print(f'{ch}')
# -F- ---br_------------------------------------------------
def br_(ch):
    print(f'\n{ch} ', end = '')
    for i in range(50): print(f'{ch} ', end = '')
    print(f'{ch}\n')
# -F- ------------------------------------------------------

# -F- ------------------------------------------------------

# [ ] -------------------------------------------------->->->
print()
br_('=')
print('  Варианты создание 2-х мерных массивов:  '.center(com, '-'))
# Тут много интересного:
# https://timeweb.com/ru/community/articles/dvumernye-massivy-python-i-metody-raboty-s-nimi
print('https://timeweb.com/ru/community/articles/dvumernye-massivy-python-i-metody-raboty-s-nimi')
br_('-')
# |--- ------------------------------------------------------
# Создание таблицы с размером 3x3, заполненной '0'.
print('  1. \'mas[i] = [0] * a\'  '.center(com, '-'))
a = 3
mas = [0] * a           # Выведет [0, 0, 0]
for i in range(a):
    mas[i] = [0] * a                                                                                                            # type: ignore
print('\n', mas, '\n')  # Выведет [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

br_('-')
# |--- ------------------------------------------------------
# Создание пустого списка с добавлением в него новых списков.
# Размером 4x4, заполненной '1'.
print('  2. \'mas.append([1] * a)\' '.center(com, '-'))
a = 4
mas = []                # Выведет []
for i in range(a):
    mas.append([1] * a)
print('\n', mas, '\n')  # Выведет [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]

br_('-')
# |--- ------------------------------------------------------
# Генератор списков с 'X' строками, которые будут состоять из 'Y' элементов.
# Размером 4x4, заполненной '2'.
print('  3. \'mas = [[2] * a for i in range(a)]\'  '.center(com, '-'))
a = 4
mas = [[2] * a for i in range(a)]
print('\n', mas, '\n')  # Выведет [[2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2]]

br_('=')
# [ ] -------------------------------------------------<-<-<-
print()
