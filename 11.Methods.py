# ? -----------------------------------------------------
# Примеры методов есть тут:
# https://devpractice.ru/python-lesson-7-work-with-list/
# ? -----------------------------------------------------
# -F- ---divider-------------------------------------------
def divider(ch):
    print(f'\n{ch} ', end = '')
    for i in range(50): print(f'{ch} ', end = '')
    print(f'{ch}\n')
# -F- -----------------------------------------------------
def br(ch):
    print(f'\n{ch} ', end = '')
    for i in range(50): print(f'{ch} ', end = '')
    print(f'{ch}\n')
# -F- -----------------------------------------------------
def bbrr(ch):
    print(f'{ch} ', end = '')
    for i in range(50): print(f'{ch} ', end = '')
    print(f'{ch}')
# -F- -----------------------------------------------------
def L1():
    list1 = [1, 1, 1]
    return list1
# -F- -----------------------------------------------------
def L2():
    list2 = [2, 2, 2]
    return list2
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.append(x)                   добавляет значение x в конец списка; ---')
# |--- -----------------------------------------------------
def ListAppend():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.append(555)
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.extend(list2)               расширяет список, добавляя в конец все элементы списка list2; ---')
# |--- -----------------------------------------------------
def ListExtend():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.extend(L2())
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.insert(i, x)                вставляет на i-ое место значение x; ---')
# |--- -----------------------------------------------------
def ListInsert():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.insert(1111, 88)                      # 1111 -> в конец списка (если массив короче).
    print(f'Кон.:   {list1}     # 1111 - индекс.')
    list1 = L1()
    list1.insert(1, 88)                         # 1    -> [1]
    print(f'Кон.:   {list1}     #    1 - индекс.')
    list1 = L1()
    list1.insert(-11, 88)                       # -11  -> [0]
    print(f'Кон.:   {list1}     #  -11 - индекс.\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.remove(x)                   удаляет первый элемент в списке, имеющий значение x. ---')
# print('---                                  Если такого элемента не существует, произойдет ошибка ValueError; ---')
# |--- -----------------------------------------------------
def ListRemove():
    list1 = [1, 1, 2, 2, 3, 3]
    print(f'\nИсх.:   {list1}')
    list1.remove(2)
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.pop(i)                    удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент; ---')
# |--- -----------------------------------------------------
def ListPop():
    list1 = [1, 2, 3, 4, 5]
    print(f'\n                                                  Исх.:  {list1}')
    print(f'# с индексом   1 | удалён и возвращён элемент {list1.pop(1)} | Кон.:  {list1}')
    list1 = [1, 2, 3, 4, 5]
    print(f'# с индексом  -1 | удалён и возвращён элемент {list1.pop(-1)} | Кон.:  {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.index(x, [start [, end]])   возвращает положение (индекс) первого элемента со значением x ---')
# print('---                                  (при этом поиск в списке ведется в срезе от start до end); ---')
# |--- -----------------------------------------------------
def ListIndex():
    i = 3                   # i - элемент
    indx = []
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]

    print(f'\nЗадан список:   {list1}')
    print(f'Ищим индекс первого встретившегося элемента {i}.\n'.center(66))
    # -C- -----------------------------------------------------
#       Поиск: [:]
#                                                           i - искомый элемент.
    print(f'\nПервый элемент {i} имеет индекс [{list1.index(i)}];   Поиск - весь список.')
    print('\nДиапазон поиска:      ->', end = '')
    for z in range(len(list1)):
        indx.append(z)
        print('{:2d}'.format(z), end = ' ')         # Форматированный вывод в консоль.
    print('<-')
    print(f'Список:                 {list1}')
    print('\n')
    # -C- -----------------------------------------------------
#       Поиск: [3:]
#                                             индекс(start) [3].
    print(f'Первый элемент {i} имеет индекс [{list1.index(i, 3)}];   Поиск - в срезе [3:]')
    print('\nДиапазон поиска:               ->', end = '')
    for z in range(len(list1) - 3):
        indx.append(z)
        print('{:2d}'.format(z + 3), end = ' ')         # Форматированный вывод в консоль.
    print('<-')
    print(f'Список:                 {list1}')
    print('\n')
    # -C- -----------------------------------------------------
#       Поиск: [11:17]
#                                           индекс(start) - [11][17] - индекс(end).
    print(f'Первый элемент {i} имеет индекс [{list1.index(i, 11, 17)}];   Поиск - в срезе [11:17]')
    print('\nДиапазон поиска:                                      -> ', end = '')
    for z in range(len(list1) - 13):
        indx.append(z)
        print('{:2d}'.format(z + 11), end = ' ')         # Форматированный вывод в консоль.
    print('<-')
    print(f'Список:                 {list1}')
    print()
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.count(x)                    возвращает количество элементов со значением x; ---')
# |--- -----------------------------------------------------
def ListCount():
    i = 2
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]
    print(f'\nСписок:  {list1}')
    count = list1.count(i)
    print(f'Искомое число {i} встречается {list1.count(i)} раз(а).')
    print(f'Искомое число {i} встречается {count} раз(а).\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.sort([key=функция])         сортирует список на основе функции; ---')
# |--- -----------------------------------------------------
def ListSort():
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]
    print(f'\nИсх.:   {list1}')
    list1.sort()
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.reverse()                   перестраивает элементы списка в обратном порядке; ---')
# |--- -----------------------------------------------------
def ListReverse():
    list1 = [1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5]
    print(f'\nИсх.:   {list1}')
    list1.reverse()
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.copy()                      возвращает поверхностную копию списка; ---')
# |--- -----------------------------------------------------
def ListCopy():
    list1 = L1()
    # -C- -----------------------------------------------------
    list10 = list1[:]               # Создаёт копию списка.
    list10[1] = 77
    print(f'\nИсх.:   {list1}       # b = a[:]')
    print(f'Кон.:   {list10}      # Верное копирование.')
    # -C- -----------------------------------------------------
    list11 = list1.copy()           # Создаёт копию списка.
    list11[1] = 55
    print(f'\nИсх.:   {list1}       # b = a.copy()')
    print(f'Кон.:   {list11}      # Верное копирование.')
# ! -----------------------------------------------------
    # -C- -----------------------------------------------------
    list12 = list1                  # !!! Списки ссылаются на одну и ту же область памяти !!!
    list12[1] = 88
    print(f'\nИсх.:   {list1}      # b = a')
    print(f'Кон.:   {list12}      # !!! НЕ ВЕРНОЕ !!! копирование.\n')
# ! -----------------------------------------------------
# -F- -----------------------------------------------------
# |--- -----------------------------------------------------
# print('--- list.clear()                     очищает список. ---')
# |--- -----------------------------------------------------
def ListClear():
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]
    print(f'\nИсх.:   {list1}')
    list1.clear()
    print(f'Кон.:   {list1}             # \'list1.clear()\'\n')
    # -C- -----------------------------------------------------
    # Результат тот же.
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]
    print(f'Исх.:   {list1}')
    del list1[:]
    print(f'Кон.:   {list1}             # \'del list1[:]\'\n')
# -F- -----------------------------------------------------
# print('---  ---')
# print()

# [ ] -------------------------------------------------->->->

print('\n')
bbrr('=')
print('=', '--- Список методов для работы со списками: ---'.center(99), '=')
bbrr('=')
print()

br('-')
print('--- list.append(x)                   добавляет значение x в конец списка; ---')
br('-')
ListAppend()
br('-')
print('--- list.extend(list2)               расширяет список, добавляя в конец все элементы списка list2; ---')
br('-')
ListExtend()
br('-')
print('--- list.insert(i, x)                вставляет на i-ое место значение x; ---')
br('-')
ListInsert()
br('-')
print('--- list.remove(x)                   удаляет первый элемент в списке, имеющий значение x. ---')
print('---                                  Если такого элемента не существует, произойдет ошибка ValueError; ---')
br('-')
ListRemove()
br('-')
print('--- list.pop(i)                    удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент; ---')
br('-')
ListPop()
br('-')
print('--- list.index(x, [start [, end]])   возвращает положение (индекс) первого элемента со значением x ---')
print('---                                  (при этом поиск в списке ведется в срезе от start до end); ---')
br('-')
ListIndex()
br('-')
print('--- list.count(x)                    возвращает количество элементов со значением x; ---')
br('-')
ListCount()
br('-')
print('--- list.sort([key=функция])         сортирует список на основе функции; ---')
br('-')
ListSort()
br('-')
print('--- list.reverse()                   перестраивает элементы списка в обратном порядке; ---')
br('-')
ListReverse()
br('-')
print('--- list.copy()                      возвращает поверхностную копию списка; ---')
br('-')
ListCopy()
br('-')
print('--- list.clear()                     очищает список. ---')
br('-')
ListClear()
br('=')


# [ ] -------------------------------------------------<-<-<-
print()

