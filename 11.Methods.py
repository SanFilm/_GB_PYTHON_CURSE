
# ? -----------------------------------------------------

# Примеры есть тут:
# https://devpractice.ru/python-lesson-7-work-with-list/

# ? -----------------------------------------------------

print()
print('= = = = = = = = = = = = = = = = = = ')
# print()
print('--- Список методов для работы со списками: ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.append(x)                   добавляет значение x в конец списка; ---')
# -F- -----------------------------------------------------
def ListAppend():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.append(555)
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.extend(list2)               расширяет список, добавляя в конец все элементы списка list2; ---')
# -F- -----------------------------------------------------
def ListExtend():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.extend(list2)
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.insert(i, x)                вставляет на i-ое место значение x; ---')
# -F- -----------------------------------------------------
def ListInsert():
    list1 = L1()
    print(f'\nИсх.:   {list1}')
    list1.insert(1111, 88)                      # 1111 -> в конец списка (если массив короче).
    print(f'Кон.:   {list1}     # 1111 - индекс.')
    list1 = L1()
    list1.insert(1, 88)                         # 1    -> [1]
    print(f'Кон.:   {list1}     #    1 - индекс.')
    list1 = L1()
    list1.insert(-11, 88)                       # -11  -> [0]
    print(f'Кон.:   {list1}     #  -11 - индекс.\n')
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.remove(x)                   удаляет первый элемент в списке, имеющий значение x. ---')
# print('---                                  Если такого элемента не существует, произойдет ошибка ValueError; ---')
# -F- -----------------------------------------------------
def ListRemove():
    list1 = [1, 1, 2, 2, 3, 3]
    print(f'\nИсх.:   {list1}')
    list1.remove(2)
    print(f'Кон.:   {list1}\n')
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.pop(i)                    удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент; ---')
# -F- -----------------------------------------------------
def ListPop():
    list1 = [1, 2, 3, 4, 5]
    print(f'\n                                                  Исх.:  {list1}')
    # list1.pop(2)
    print(f'# с индексом   1 | удалён и возвращён элемент {list1.pop(1)} | Кон.:  {list1}')
    list1 = [1, 2, 3, 4, 5]
    # list1.pop(-2)
    print(f'# с индексом  -1 | удалён и возвращён элемент {list1.pop(-1)} | Кон.:  {list1}\n')
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.index(x, [start [, end]])   возвращает положение (индекс) первого элемента со значением x ---')
# print('---                                  (при этом поиск в списке ведется в срезе от start до end); ---')
# -F- -----------------------------------------------------
def ListIndex():
    i = 3                   # i - элемент
    indx = []
    list1 = [1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 2, 3, 4, 2, 4, 2]

    # print('\n- - - - - - - - - - - - - - - - - - ')
    print(f'\nЗадан список:   {list1}')
    print(f'      Ищим индекс первого встретившегося элемента {i}.\n')
    # print('- - - - - - - - - - - - - - - - - - ')
# |--- -----------------------------------------------------
#   Поиск: [:]
#                                 i - искомый элемент.
    print(f'\nПервый элемент {i} имеет индекс [{list1.index(i)}];   Поиск - весь список.')
    print('\nДиапазон поиска:      ->', end = '')
    for z in range(len(list1)):
        indx.append(z)
        print('{:2d}'.format(z), end = ' ')
    print('<-')
    print(f'Список:                 {list1}')
    print('\n')
# |--- -----------------------------------------------------
#   Поиск: [3:]
#                     индекс(start) [3].
    print(f'Первый элемент {i} имеет индекс [{list1.index(i, 3)}];   Поиск - в срезе [3:]')
    print('\nДиапазон поиска:               ->', end = '')
    for z in range(len(list1) - 3):
        indx.append(z)
        print('{:2d}'.format(z + 3), end = ' ')
    print('<-')
    print(f'Список:                 {list1}')
    print('\n')
# |--- -----------------------------------------------------
#   Поиск: [11:17]
    #                                       индекс(start) - [11][17] - индекс(end).
    print(f'Первый элемент {i} имеет индекс [{list1.index(i, 11, 17)}];   Поиск - в срезе [11:17]')
    print('\nДиапазон поиска:                                       ->', end = '')
    for z in range(len(list1) - 13):
        indx.append(z)
        print('{:2d}'.format(z + 11), end = ' ')
    print('<-')
    print(f'Список:                 {list1}')
    print()
# |--- -----------------------------------------------------
# -F- -----------------------------------------------------
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.count(x)                    возвращает количество элементов со значением x; ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.sort([key=функция])         сортирует список на основе функции; ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.reverse()                   перестраивает элементы списка в обратном порядке; ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.copy()                      возвращает поверхностную копию списка; ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('--- list.clear()                     очищает список. ---')
# print('- - - - - - - - - - - - - - - - - - ')
# print('---  ---')
# print()
print('= = = = = = = = = = = = = = = = = = ')
print()
# [ ] -------------------------------------------------->->->

def L1():
    list1 = [1, 1, 1]
    return list1

# list1 = L1()
# list1 = [1, 1, 1]
list2 = [2, 2, 2]
# print(f'Исх. \'list1\':   {list1}')
# print(f'Исх. \'list2\':   {list2}')
print()

print('- - - - - - - - - - - - - - - - - - ')
# list1 = L1()
print('--- list.append(x)                   добавляет значение x в конец списка; ---')
ListAppend()
print('- - - - - - - - - - - - - - - - - - ')
print('--- list.extend(list2)               расширяет список, добавляя в конец все элементы списка list2; ---')
ListExtend()
print('- - - - - - - - - - - - - - - - - - ')
print('--- list.insert(i, x)                вставляет на i-ое место значение x; ---')
ListInsert()
print('- - - - - - - - - - - - - - - - - - ')
print('--- list.remove(x)                   удаляет первый элемент в списке, имеющий значение x. ---')
print('---                                  Если такого элемента не существует, произойдет ошибка ValueError; ---')
ListRemove()
print('- - - - - - - - - - - - - - - - - - ')
print('--- list.pop(i)                    удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент; ---')
ListPop()
print('- - - - - - - - - - - - - - - - - - ')
print('--- list.index(x, [start [, end]])   возвращает положение (индекс) первого элемента со значением x ---')
print('---                                  (при этом поиск в списке ведется в срезе от start до end); ---')
ListIndex()
print('- - - - - - - - - - - - - - - - - - ')

""" list1.append(24)
print(list1) """

""" # Метод .append(x) добавляет значение x в конец списка
list1.append(24)
print(list1)
# Метод .insert(i, x) вставляет на i-ое место значение x
list1.insert(1, 4)
print(list1) """


# [ ] -------------------------------------------------<-<-<-
print('- - - - - - - - - - - - - - - - - - ')
""" print(f'Исх. \'list1\':   {list1}')
print(f'Исх. \'list2\':   {list2}') """
print('- - - - - - - - - - - - - - - - - - ')
print('- - - - - - - - - - - - - - - - - - ')
